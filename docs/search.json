[{"path":"index.html","id":"들어가며","chapter":"1 .  들어가며","heading":"1 .  들어가며","text":"한국 알(R) 사용자회는 디지털 불평등 해소와 통계 대중화를 오픈 통계 패키지 개발을 2021년부터 추진하였습니다.\n더불어 설치형 오픈 통계 패키지를 신종화 님께서 John Fox 교수님이 개발한 Rcmdr 기반으로 한글화 및 문서화에 10년 넘게 기여해주셨습니다. 이에 한국 알(R) 사용자회는 신종화님의 Rcmdr 거인의 어깨위에 디지털 불평등 해소와 통계 대중화를 위해 한 걸음 더 나아가게 되었습니다. 특히 신종화님께서 기여하신 한글화 및 문서를 근간으로 더 많은 분들이 오픈 통계 패키지를 사용할 수 있도록 bookdown으로 내용을 정리하여 통계 대중화가 한층 앞당겨질 것으로 기대됩니다.신종화님께서 왜 오픈 통계 패키지로 Rcmdr를 근간으로 해야 하는지 이유를 명쾌하게 다음과 같이 정리해 주셨습니다.R에는 여러 개의 GUI 작업도구들이 있습니다. 모두 목적이 분명하고, 좋은 도구이며, 일부는 현재도 향상작업이 진행되고 있습니다. 그럼에도 불구하고 R Commander를 위한 블로그 작업을 진행하는 이유는 크게 두가지 입니다.첫째, R Commander는 직관적으로 기존의 기초통계학 도구와 유사합니다. Command Line 에서 작업하는 것에 익숙하지 않은, 또 어려움을 겪고 있는 사용자들에게 기초통계학분야를 학습하고 활용하는데 도움을 주기 위하여 R Commander가 개발되었습니다. 개발자인 John Fox 교수는 이 목적과 관리방향을 분명히하고 있습니다. 중급이상의 R 사용자/ 고급통계 연구자들에게는 R Commander가 불필요할 수 있습니다.둘째, 지난 10년동안 R Commander의 메뉴 한글화작업을 진행해왔으며, 현재도 유지관리를 하고 있습니다. (이 정보는 R Commander 안의 Help > Rcmdr 에 있습니다) [Translations: Korean, Chel Hee Lee, Dae-Heung Jang, Shin Jong-Hwa] 지난 10년 동안 개인적인 메모 차원에서 R Commander 사용 및 한글화 관련 블로그 포스트를 만들고 관리되어 왔고 블로그에 전체 과정이 고스란히 남아있고 계속적으로 유지관리될 것입니다.신종화 Rcmdr : R CommanderCRAN Rcmdr 패키지 정보개발자 John Fox 교수의 Rcmdr 소개FOSSER_Ricoop","code":""},{"path":"install.html","id":"install","chapter":"2 .  설치","heading":"2 .  설치","text":"","code":""},{"path":"install.html","id":"맥os","chapter":"2 .  설치","heading":"2.1 맥OS","text":"Rcmdr 통계 프로그램을 맥에서 설치하는 경우 다음 전제 조건을 충족시키고 순서대로 진행하여 설치작업을 완료한다.가장 최신 맥OS로 갱신R 설치 다운로드XQuartz 설치 다운로드재부팅R.app에서 R 실행메뉴에서 Packages & Data > Package Installer 이동\nRcmdr 검색\nRcmdr 선택\nInstall Dependecies 체크박스 클릭\nInstall Selected 클릭\nRcmdr 검색Rcmdr 선택Install Dependecies 체크박스 클릭Install Selected 클릭R 명령 프롬프트에서 library(Rcmdr) 실행자세한 사항은 아래 동영상 참조","code":""},{"path":"파일-file.html","id":"파일-file","chapter":"3 .  파일 / File","heading":"3 .  파일 / File","text":"","code":""},{"path":"파일-file.html","id":"작업-디렉토리-바꾸기-file-change-working-directory","chapter":"3 .  파일 / File","heading":"3.1 작업 디렉토리 바꾸기…/ File > Change working directory…","text":"Windows 사례R이 시작되는 곳, 불러올 데이터가 보관되는 곳, 그리고 데이터를 저장할 곳이 다른 경우가 흔히 발생한다. 흔히 ‘경로’ 변경과 관련된 일인데, 일일이 수작업으로 입력하기가 불편하다. GUI 환경에서 R 작업을 할 때, 효과적인 영역이다.MS-Windows 경우, user > 문서 경로부터 화면이 시작된다.관련된 함수는 getwd(), setwd() 등이 있다.","code":""},{"path":"파일-file.html","id":"스크립트-파일-열기-file-open-script-file","chapter":"3 .  파일 / File","heading":"3.2 스크립트 파일 열기…/ File > Open script file…","text":"Windows 사례.R 형식의 스크립트 파일을 만드는 것은 R을 사용하는 데이터과학자의 일반적인 활동이다. 때로는 길게, 때로는 짧게 .R 파일들을 만든다. 저장된 파일을 다시 불러서 추가적인 작업을 하거나, 코드를 고치거나, 때로는 다른 사용자가 만든 .R 파일을 불러와 작업을 하는 것이 흔하다..R 파일은 일반적으로 문서 편집기로 작업을 할 수 있다. R Commander는 입력창과 출력창을 나눠서 작업이 가능하기 때문에, 입력창을 문서 편집기처럼 활용해서 .R 파일을 작업할 수 있다.","code":""},{"path":"파일-file.html","id":"스크립트-저장하기-file-save-script","chapter":"3 .  파일 / File","heading":"3.3 스크립트 저장하기…/ File > Save script…","text":"R Commander의 입력창에서 작업한 내용을 .R 파일 형식으로 저장한다. 저장하는 작업공간을 선택 또는 변경할 수 있다.RCommander.R이 기본설정으로 스크립트 이름이 나온다. 원하는 이름으로 변경하여 사용하자.","code":""},{"path":"파일-file.html","id":"스크립트-다른-이름으로-저장하기-file-save-script-as","chapter":"3 .  파일 / File","heading":"3.4 스크립트 다른 이름으로 저장하기…/ File > Save script as…","text":"작업한 스크립트 파일을 다른 이름으로 저장한다. 기본으로 설정된 파일 이름은 RCommander.R이다. 이름을 원하는 것으로 변경한다.","code":""},{"path":"파일-file.html","id":"open-r-markdown-file","chapter":"3 .  파일 / File","heading":"3.5 Open R Markdown file…","text":"R의 Reproducible Research 분야에서 온라인 웹보고서용으로 최근 크게 부각되는 형식이 Markdown이다. 제작된 R Markdown 파일을 불러오는데 사용하는 기능이다.","code":""},{"path":"파일-file.html","id":"r-markdown-파일-저장하기-file-save-r-markdown-file..","chapter":"3 .  파일 / File","heading":"3.6 R Markdown 파일 저장하기…/ File > Save R Markdown file..","text":"R Markdown 파일을 (원하는 위치에) 저장한다.","code":""},{"path":"파일-file.html","id":"r-markdown-파일을-다른-이름으로-저장하기-file-save-r-markdown-file-as","chapter":"3 .  파일 / File","heading":"3.7 R Markdown 파일을 다른 이름으로 저장하기…/ File > Save R Markdown file as…","text":"R Markdown file을 열고 작업한 뒤에, 새로운 이름으로 변경하여 원하는 위치에 저장한다.","code":""},{"path":"파일-file.html","id":"출력물-저장하기-file-save-output","chapter":"3 .  파일 / File","heading":"3.8 출력물 저장하기…/ File > Save output…","text":"Linux 사례 (Ubuntu 18.04)출력창에 다음과 같은 내용들이 있다고 가정하자:Linux 사례 (Ubuntu 18.04)출력창에 나온 결과 값들을 파일로 저장한다. 이 파일은 기본설정으로 RCommander .txt 형식으로 되어있는데, 이름을 자유롭게 변경하여 저장할 수 있다.Linux 사례 (Ubuntu 18.04)RCommander.txt라는 이름으로 출력물을 파일로 저장하였다고 가정하자. 텍스트파일을 열고 편집할 수 있는 편집기를 열고 살펴보면 다음과 같이 저장된 것을 볼 것이다:저장할 파일의 이름을 결정하고, 파일로 저장한 이후에 <출력물 저장하기…> 기능은 출력물을 계속 업데이트해서 저장하는데 반복적으로 사용한다.","code":"\nlibrary(carData)\n\ndata(\"Prestige\")\n\nstr(Prestige)## 'data.frame':    102 obs. of  6 variables:\n##  $ education: num  13.1 12.3 12.8 11.4 14.6 ...\n##  $ income   : int  12351 25879 9271 8865 8403 11030 8258 14163 11377 11023 ...\n##  $ women    : num  11.16 4.02 15.7 9.11 11.68 ...\n##  $ prestige : num  68.8 69.1 63.4 56.8 73.5 77.6 72.6 78.1 73.1 68.8 ...\n##  $ census   : int  1113 1130 1171 1175 2111 2113 2133 2141 2143 2153 ...\n##  $ type     : Factor w/ 3 levels \"bc\",\"prof\",\"wc\": 2 2 2 2 2 2 2 2 2 2 ...\nsummary(Prestige)##    education          income          women           prestige    \n##  Min.   : 6.380   Min.   :  611   Min.   : 0.000   Min.   :14.80  \n##  1st Qu.: 8.445   1st Qu.: 4106   1st Qu.: 3.592   1st Qu.:35.23  \n##  Median :10.540   Median : 5930   Median :13.600   Median :43.60  \n##  Mean   :10.738   Mean   : 6798   Mean   :28.979   Mean   :46.83  \n##  3rd Qu.:12.648   3rd Qu.: 8187   3rd Qu.:52.203   3rd Qu.:59.27  \n##  Max.   :15.970   Max.   :25879   Max.   :97.510   Max.   :87.20  \n##      census       type   \n##  Min.   :1113   bc  :44  \n##  1st Qu.:3120   prof:31  \n##  Median :5135   wc  :23  \n##  Mean   :5402   NA's: 4  \n##  3rd Qu.:8312            \n##  Max.   :9517"},{"path":"파일-file.html","id":"출력물을-다른-이름으로-저장하기-file-save-output-as","chapter":"3 .  파일 / File","heading":"3.9 출력물을 다른 이름으로 저장하기…/ File > Save output as…","text":"Linux 사례 (Ubuntu18.04)출력 결과를 다른 이름으로 원하는 위치에 저장할 수 있다. 기본 설정된 파일 이름은 RCommander.txt 인데, 이름을 바꿔서 저장한다.Linux 사례 (Ubuntu18.04)자료처리와 분석과정에서 여러 개의 출력물을 만드는 것이 일반적이다. 하나의 파일에 길고 많은 양의 출력파일을 만들기도 하지만, 분석과정에서 다양하게 분류될 수 있는 분석범주들을 구성할 때가 흔히 발생하기 때문이다. 출력물을 원하는 곳에 원하는 이름으로 저장하는데 쓰이는 기능으로 자주 활용된다.","code":""},{"path":"파일-file.html","id":"r-작업공간-저장하기-file-save-r-workspace","chapter":"3 .  파일 / File","heading":"3.10 R 작업공간 저장하기…/ File > Save R workspace…","text":"작업공간에서 만든/생성된 하나 이상의 객체를 원하는 이름의 파일로 저장할 수 있다. .RData 파일 형식인데, 이름을 만들어 원하는 위치에 파일을 저장할 수 있다.메뉴에 Data > load data set… 이 있다. 이 기능을 통하여 저장된 R 작업공간의 객체들을 다시 불러올 수 있다.","code":""},{"path":"파일-file.html","id":"r-작업공간을-다른-이름으로-저장하기-file-save-r-workspace-as","chapter":"3 .  파일 / File","heading":"3.11 R 작업공간을 다른 이름으로 저장하기…/ File > Save R workspace as…","text":"R 작업공간의 이름을 바꿀 수 있다. 이름을 바꾼다는 것은 앞서 생산한 작업공간 파일(.RData)을 불러들여서 추가 작업을 진행한 것을 뜻할 것이다.","code":""},{"path":"파일-file.html","id":"나가기-commander와-r에서-file-exit-from-commander-and-r","chapter":"3 .  파일 / File","heading":"3.12 나가기 > Commander와 R에서 / File > Exit > From Commander and R","text":"Exit?Save script file?Save R Markdown file?Save output file? 등의 추가 질문을 받는다.File 메뉴에 있는 기능들과 동일하다. 사용자로 하여금 ‘시간과 노력을 들여 작업한 내용을’ 저장없이 잃어버리는 것을 환기시키기 위하여 제공된다.터미날의 쉘 환경으로 돌아간다. 그런데 아쉬운 점이 하나 발생한다. 다시 R과 R Commander를 실행할 경우, 새로운 쉘을 이용해야 한다. 기존 쉘 환경에서는 입력내용이 화면에 출력되지 않는다. 예를 들어, Commander R을 실행하여 R을 종료한 다음, 다시 R을 실행하려고 ’R’을 쉘에 입력하면, 화면에 ’R’이 보이지 않는다. 하지만, R은 실행된다. 또 R 프롬프트에서도 입력이 되지 않는다.","code":""},{"path":"파일-file.html","id":"나가기-commander에서-file-exit-from-commander","chapter":"3 .  파일 / File","heading":"3.13 나가기 > Commander에서 / File > Exit > From Commander","text":"Exit?Save script file?Save R Markdown file?Save output file? 등의 추가 질문을 받는다.File 메뉴에 있는 기능들과 동일하다. 사용자로 하여금 ‘시간과 노력을 들여 작업한 내용을’ 저장없이 잃어버리는 것을 환기시키기 위하여 제공된다.Commander에서 나가면 R 프롬프트 상태가 된다. 다시 R Commander를 부르기 위해서 library(Rcmdr), require(Rcmdr) 등은 작동하지 않는다. 대신 Commander()를 사용한다.","code":""}]
